// Script de diagnostic pour les probl√®mes de chargement
import { supabase } from '../src/lib/customSupabaseClient.js';

async function diagnoseLoadingIssues() {
  console.log('üîç Diagnostic des probl√®mes de chargement...\n');
  
  // Test 1: Connexion Supabase
  console.log('üì° Test de connexion Supabase...');
  try {
    const { data, error } = await supabase.from('pedagogy_sheets').select('count').limit(1);
    if (error) {
      console.log('‚ùå Erreur Supabase:', error.message);
    } else {
      console.log('‚úÖ Connexion Supabase OK');
    }
  } catch (e) {
    console.log('‚ùå Erreur connexion:', e.message);
  }
  
  // Test 2: Session d'authentification
  console.log('\nüîê Test de session d\'authentification...');
  try {
    const { data: { session }, error } = await supabase.auth.getSession();
    if (error) {
      console.log('‚ùå Erreur session:', error.message);
    } else {
      console.log(session ? '‚úÖ Session trouv√©e' : '‚ö†Ô∏è Pas de session (normal si pas connect√©)');
    }
  } catch (e) {
    console.log('‚ùå Erreur session:', e.message);
  }
  
  // Test 3: Tables principales
  console.log('\nüìä Test des tables principales...');
  const tables = ['pedagogy_sheets', 'competitions', 'members'];
  
  for (const table of tables) {
    try {
      const { data, error } = await supabase.from(table).select('id').limit(1);
      if (error) {
        console.log(`‚ùå Table ${table}:`, error.message);
      } else {
        console.log(`‚úÖ Table ${table}: ${data?.length || 0} enregistrement(s) test√©(s)`);
      }
    } catch (e) {
      console.log(`‚ùå Table ${table}:`, e.message);
    }
  }
  
  // Test 4: Temps de r√©ponse
  console.log('\n‚è±Ô∏è Test des temps de r√©ponse...');
  const start = Date.now();
  try {
    await supabase.from('pedagogy_sheets').select('id, title').limit(5);
    const duration = Date.now() - start;
    console.log(`‚úÖ Requ√™te termin√©e en ${duration}ms`);
    if (duration > 3000) {
      console.log('‚ö†Ô∏è Temps de r√©ponse lent (>3s) - possible cause du probl√®me');
    }
  } catch (e) {
    console.log('‚ùå Test temps de r√©ponse √©chou√©:', e.message);
  }
  
  console.log('\nüéØ R√©sum√©:');
  console.log('- Si toutes les connexions sont OK, le probl√®me vient de la gestion d\'√©tat React');
  console.log('- Si les temps de r√©ponse sont lents, c\'est un probl√®me r√©seau/Supabase');
  console.log('- V√©rifiez la console navigateur pour plus de d√©tails');
}

diagnoseLoadingIssues();